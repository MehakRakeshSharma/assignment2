Assignment - 35 A Job Ready Bootcamp in C++, DSA and IOT

Templates

1. Write a C++ program to demonstrate the addition of multiple types of data using generic functions or templates.

ans 1 )

#include<iostream>
using namespace std;

template <class X >
add ( X a, X b)
{
    cout<<endl<<"The sum of two numbers "<<a<<" and "<<b<<" is : "<<(a+b);
}

int main ()
{
    int x, y;
    cout<<endl<<" Enter two numbers of int type : ";
    cin>>x>>y;
    add(x,y);
    double m,n;
    cout<<endl<<" Enter two real numbers : ";
    cin>>m>>n;
    add(m,n);
    return 0;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

2. Write a C++ Program to find Largest among two numbers using function template.

ans 2 )

#include<iostream>
#include<conio.h>
using namespace std;

template <class Y >
Y big (Y a, Y b)
{
    if (a>b)
        return a;
    else
        return b;
}

int main ()
{
    cout<<endl<<big(4,5);
    cout<<endl<<big(5.6,3.4);
    return 0;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

3. Write a C++ program to find the largest of three elements using a template.

ans 3 )

#include<iostream>
#include<conio.h>
using namespace std;

template <class Y >
Y big (Y a, Y b, Y c)
{
    if (a>b&&a>c)
        return a;
    if (b>a&&b>c)
        return b;
        else
            return c;
}

int main ()
{
    cout<<endl<<big(4,5,6);
    cout<<endl<<big(5.6,3.4,4.2);
    return 0;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


4. Write a C++ Program to Swap data using function template.

ans 4 )

#include<iostream>
#include<conio.h>
using namespace std;

template <class Y >
swap_data (Y *A, Y *B)
{
    Y temp;
    temp= *A;
    *A = *B;
    *B = temp;
    cout<<endl<<" numbers after swapping are : "<<*A<<" "<<*B;
}

int main ()
{
    int *a,*b,m,n;
    double *p,*q,x,y;
    cout<<endl<<" Enter 2 integers values : ";
    cin>>m>>n;
    a=&m;
    b=&n;
    swap_data(a,b);
    cout<<endl<<" Enter 2 real values : ";
    cin>>x>>y;
    p=&x;
    q=&y;
    swap_data(p,q);
    return 0;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


5. Write a C++ Program to Add two numbers using function template.

ans 5 )

#include<iostream>
using namespace std;

template <class X >
add ( X a, X b)
{
    cout<<endl<<"The sum of two numbers "<<a<<" and "<<b<<" is : "<<(a+b);
}

int main ()
{
    int x, y;
    cout<<endl<<" Enter two numbers of int type : ";
    cin>>x>>y;
    add(x,y);
    double m,n;
    cout<<endl<<" Enter two real numbers : ";
    cin>>m>>n;
    add(m,n);
    return 0;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


6. Write a C++ Program to find Sum of Array using function template.

ans 6 )

#include<iostream>
using namespace std;
template <class Y>
array_sum ()
{
    int a;
    cout<<endl<<" Enter the number of elements in your array : ";
    cin>>a;
    Y sum=0;
    Y arr[a];
    cout<<endl<<" Enter the numbers : ";
    for (int i=0;i<a;i++)
    {
        cin>>arr[i];
        sum=sum+arr[i];
    }
    cout<<endl<< " The sum is : "<<sum;
}

int main ()
{
    array_sum();
    return 0;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




7. Write a C++ Program of Templated class derived from Non-templated class.

ans 7 )

#include <iostream>
using namespace std;

// Non-templated base class
class Base {
public:
  void print() {
    cout << "This is a non-templated class" << endl;
  }
};

// Templated derived class
template <typename T>
class Derived : public Base {
public:
  void print() {
    cout << "This is a templated class with type " << typeid(T).name() << endl;
  }
};

int main() {
  // Create instances of both classes
  Base b;
  Derived<int> d;

  // Call print() on both instances
  b.print();
  d.print();

  return 0;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

8. Write a C++ Program to implement push and pop methods from stack using template.

ans 8 )

#include <iostream>
using namespace std;

template <typename T>
class Stack {
private:
    T* data;
    int top;
    int capacity;
public:
    Stack(int cap = 10) : top(-1), capacity(cap) {
        data = new T[capacity];
    }
    ~Stack() {
        delete[] data;
    }
    void push(T element) {
        if (top == capacity - 1) {
            cout << "Stack Overflow!" << endl;
            return;
        }
        top++;
        data[top] = element;
    }
    T pop() {
        if (top == -1) {
            cout << "Stack Underflow!" << endl;
            return T();
        }
        T element = data[top];
        top--;
        return element;
    }
    bool isEmpty() const {
        return top == -1;
    }
    bool isFull() const {
        return top == capacity - 1;
    }
};

int main() {
    Stack<int> s(5);
    s.push(10);
    s.push(20);
    s.push(30);
    cout << s.pop() << endl;
    cout << s.pop() << endl;
    cout << s.pop() << endl;
    cout << s.pop() << endl;
    return 0;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

9. Write a C++ Program to Perform Simple Addition Function Using Templates.

ans 9 )

#include<iostream>
using namespace std;

template <class X >
add ( X a, X b)
{
    cout<<endl<<"The sum of two numbers "<<a<<" and "<<b<<" is : "<<(a+b);
}

int main ()
{
    int x, y;
    cout<<endl<<" Enter two numbers of int type : ";
    cin>>x>>y;
    add(x,y);
    double m,n;
    cout<<endl<<" Enter two real numbers : ";
    cin>>m>>n;
    add(m,n);
    return 0;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



10. Write a C++ program to implement Hash Table using Template Class.

ans 10 )

#include <iostream>
#include <vector>
#include<conio.h>
using namespace std;

template<typename K, typename V>
class HashTable {
private:
    vector<pair<K, V>>* table;
    int capacity;
    int size;
public:
    HashTable(int cap = 101) : capacity(cap), size(0) {
        table = new vector<pair<K, V>>[capacity];
    }
    ~HashTable() {
        delete[] table;
    }
    void insert(K key, V value) {
        int hashVal = hashFunc(key);
        for (auto& p : table[hashVal]) {
            if (p.first == key) {
                p.second = value;
                return;
            }
        }
        table[hashVal].push_back({ key, value });
        size++;
    }
    bool remove(K key) {
        int hashVal = hashFunc(key);
        for (auto it = table[hashVal].begin(); it != table[hashVal].end(); it++) {
            if (it->first == key) {
                table[hashVal].erase(it);
                size--;
                return true;
            }
        }
        return false;
    }
    V* get(K key) {
        int hashVal = hashFunc(key);
        for (auto& p : table[hashVal]) {
            if (p.first == key) {
                return &p.second;
            }
        }
        return nullptr;
    }
    int getSize() const {
        return size;
    }
private:
    int hashFunc(K key) {
        return (key % capacity);
    }
};

int main() {
    HashTable<string, int> ht(10);
    ht.insert("apple", 5);
    ht.insert("banana", 3);
    ht.insert("cherry", 7);
    ht.insert("date", 2);
    ht.insert("elderberry", 8);
    ht.insert("fig", 1);
    ht.insert("grape", 6);
    ht.insert("honeydew", 4);
    ht.insert("jackfruit", 9);
    ht.remove("date");
    cout << ht.getSize() << endl;
    int* val = ht.get("grape");
    if (val != nullptr) {
        cout << *val << endl;
    }
    return 0;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////