Assignment - 15 

A Job Ready Bootcamp in C++, DSA and IOT MySirG 

Array and Functions in C Language 


1. Write a function to find the greatest number from the given array of any size. (TSRS) 

ans 1)

#include<stdio.h>
int a;
int main ()
{
int i,j;
printf ("Enter the number of elements :  ");
scanf ("%d",&a);
int b[a];
printf ("\n Enter the elements\n");
for (i=0;i<a;i++)
{
    scanf ("%d\n",&b[i]);
}
j= maximum (b);
printf ("\n The greatest number is %d",j);
return 0;
}
int maximum (int [a]);
int maximum (int c[a])
{
    int d,max=0;
    for (d=0;d<a;d++)
    {
        max=max>=c[d]?max:c[d];
    }
    return max;
}


2. Write a function to find the smallest number from the given array of any size. (TSRS) 

ans 2)

#include<stdio.h>
int a;
int main ()
{
int i,j;
printf ("Enter the number of elements :  ");
scanf ("%d",&a);
int b[a];
printf ("\n Enter the elements\n");
for (i=0;i<a;i++)
{
    scanf ("%d\n",&b[i]);
}
j= minimum (b);
printf ("\n The smallest number is %d",j);
return 0;
}
int minimum (int [a]);
int minimum (int c[a])
{
    int d,max=0,min;
    for (d=0;d<a;d++)
    {
        max=max>=c[d]?max:c[d];
    }
    min=max;
    for (d=0;d<a;d++)
    {
        min=min>=c[d]?c[d]:min;
    }
    return min;
}


3. Write a function to sort an array of any size. (TSRS) 


ans 3)

#include<stdio.h>
int m;
int main ()
{
int x,y,z;
printf ("Enter the number of elements :  ");
scanf ("%d",&x);
int a[x];
printf ("\n Enter the elements\n");
for (y=0;y<x;y++)
{
    scanf ("%d\n",&a[y]);
}
printf ("\n sorted elements :");

z= sorting (a,x);

return 0;
}
int sorting (int [],int);
int sorting (int b[],int m)
{
    int i,j,temp;
    for (i=0;i<m-1;i++)
    {
        for (j=i+1;j<m;j++)
        {
            if (b[i]>b[j])
             {
                temp=b[i];
                b[i]=b[j];
                b[j]=temp;
             }
        }
    }
            return 0;
}

4. Write a function to rotate an array by n position in d direction. The d is an indicative  value for left or right. (For example, if array of size 5 is [32, 29, 40, 12, 70]; n is 2 and  d is left, then the resulting array after left rotation 2 times is [40, 12, 70, 32, 29] ) 

ans 4 )

#include<stdio.h>
int rotation ( int N, int D)
{
    int i,m,temp,j=0;
        printf ("enter the number of elements:");
    scanf ("%d",&m);
    int a[m];
    printf ("enter the elements :");
    for (i=0;i<=m-1;i++)
    scanf ("%d\n",&a[i]);
    if (D==1)
    {
     while (j<N)
     {
              temp=a[0];

     for (i=0;i<=m-2;i++)
     {
         a[i]=a[i+1];
     }
     a[m-1]=temp;
    j++;
    }
    }
    if (D==2)
    {
        while (j<N)
        {
      temp=a[m-1];
      for (i=m-1;i>=1;i--)
      {
          a[i]=a[i-1];
      }
      a[0]=temp;
      j++;
    }
    }
    else
        {
            printf ("wrong input");
            return 0;
        }
        printf ("\n after shifting your array is :");
    for (i=0;i<=m;i++)
    printf ("\n%d\n",a[i]);
    return 1;
}
int main ()
{
    int n,d,ret;

    printf ("Enter the number of times you want shifting to take place and 1 for left or 2 for right direction\n");
    scanf ("%d\n %d",&n,&d);
    ret = rotation (n,d);

    return 0;

}


5. Write a function to find the first occurrence of adjacent duplicate values in the array.  Function has to return the value of the element. 

ans 5)

#include<stdio.h>


int main ()
{
    int i,m,z;
    fflush (stdin);
    printf ("Enter the number of elements : ");
    scanf ("%d ",&m);
    int a[m];
    printf ("\nEnter the elements :");
    for (i=0;i<=m-1;i++)
        scanf ("%d ",&a[i]);
    z= duplicate (a,m);
    if (z!=NULL)
        printf ("The repeated number is %d",z);
    else
        printf ("no adjacent duplicate found");
    return 0;

}
int duplicate (int A[],int M)
{
    int j,k,n;
    printf ("adjacent duplicate are found at position numbers :");
    for (j=0;j<M-1;j++)
    {
        for (k=1;k<M;k++)
        {
            if (j!=k&&A[j]==A[k]&&(j==k+1||k==j+1))
            {
                n=A[j];
                printf ("%d and %d\n",j,k);
                return n;
            }
            else
                n=NULL;

        }
    }
    return n;
}


6. Write a function in C to read n number of values in an array and display it in reverse  order. 

ans 6)

#include<stdio.h>
int main ()
{
    reverse ();
    return 0;
}

void reverse (void)
{
    int m,i;
    printf ("Enter the number of elements : ");
    scanf ("%d",&m);
    int a[m];
    printf ("\n ENTER THE ELEMENTS :\n");
    for (i=0;i<=m-1;i++)
    scanf ("%d\n",&a[i]);

    printf ("The values you entered are :\n"); // reading part
    for (i=0;i<=m-1;i++)
        printf ("%d  ",a[i]);

    printf ("\nThe reverse order of this array is :\n");
    for (i=m-1;i>=0;i--)
        printf ("%d  ",a[i]);
}


7. Write a function in C to count a total number of duplicate elements in an array. 

ans 7 )

 
#include <stdio.h>
 
int main()
{
	int arr[10], i, j, Size, Count = 0;
	
	printf("\n Please Enter Number of elements in an array  :   ");
	scanf("%d", &Size);
	
	printf("\n Please Enter %d elements of an Array  :  ", Size);
	for (i = 0; i < Size; i++)
	{
    	scanf("%d", &arr[i]);
   	}     
 
	for (i = 0; i < Size; i++)
	{
		for(j = i + 1; j < Size; j++)
		{
    		if(arr[i] == arr[j])
    		{
    			Count++;
				break;
			}
		}
	}

 	printf("\n Total Number of Duplicate Elements in this Array  =  %d ", Count);
	     
 	return 0;
}

8. Write a function in C to print all unique elements in an array. 

ans 8 )


#include <stdio.h>
int main()
{
    int arr1[100], n,ctr=0;
    int i, j, k;
       printf("\n\nPrint all unique elements of an array:\n");
       printf("------------------------------------------\n");	
       printf("Input the number of elements to be stored in the array: ");
       scanf("%d",&n);
       printf("Input %d elements in the array :\n",n);
       for(i=0;i<n;i++)
            {
	      printf("element - %d : ",i);
	      scanf("%d",&arr1[i]);
	    }
    printf("\nThe unique elements found in the array are: \n");
    for(i=0; i<n; i++)
    {
        ctr=0;
        for(j=0,k=n; j<k+1; j++)
        {
            /*Increment the counter when the seaarch value is duplicate.*/
            if (i!=j)
            {
		       if(arr1[i]==arr1[j])
              {
                 ctr++;
               }
             }
        }
       if(ctr==0)
        {
          printf("%d ",arr1[i]);
        }
    }
       printf("\n\n");
}

9. Write a function in C to merge two arrays of the same size sorted in descending  order. 

ans 9 )

#include <stdio.h>

void main()
{
    int arr1[100], arr2[100], arr3[200];
    int s1, s2, s3;
    int i, j, k;
	
	
       printf("\n\nMerge two arrays of same size sorted in decending order.\n");
       printf("------------------------------------------------------------\n");	
	   
       printf("Input the number of elements to be stored in the first array :");
       scanf("%d",&s1);
   
       printf("Input %d elements in the array :\n",s1);
       for(i=0;i<s1;i++)
            {
	      printf("element - %d : ",i);
	      scanf("%d",&arr1[i]);
	    }


       printf("Input the number of elements to be stored in the second array :");
       scanf("%d",&s2);
   
       printf("Input %d elements in the array :\n",s2);
       for(i=0;i<s2;i++)
            {
	      printf("element - %d : ",i);
	      scanf("%d",&arr2[i]);
	    }

    /* size of merged array is size of first array and  size of second array */
    s3 = s1 + s2;
/*----------------- insert in the third array------------------------------------*/
    for(i=0;i<s1; i++)
        {
            arr3[i] = arr1[i];
         }
     for(j=0;j<s2; j++)
        {
            arr3[i] = arr2[j];
            i++; 
        }
/*----------------- sort the array in decending order ---------------------------*/
   for(i=0;i<s3; i++)
        {
           for(k=0;k<s3-1;k++)
             {
         
                if(arr3[k]<=arr3[k+1])
                 {
                   j=arr3[k+1];
                   arr3[k+1]=arr3[k];
                   arr3[k]=j;
                 }  
              }
         }                      

/*--------------- Prints the merged array ------------------------------------*/
     printf("\nThe merged array in decending order is :\n");
    for(i=0; i<s3; i++)
    {
        printf("%d   ", arr3[i]);
    }
	printf("\n\n");
}

10. Write a function in C to count the frequency of each element of an array.


ans 10 )

#include <stdio.h>

void main()
{
    int arr1[100], fr1[100];
    int n, i, j, ctr;
	
	
       printf("\n\nCount frequency of each element of an array:\n");
       printf("------------------------------------------------\n");	

       printf("Input the number of elements to be stored in the array :");
       scanf("%d",&n);
   
       printf("Input %d elements in the array :\n",n);
       for(i=0;i<n;i++)
            {
	      printf("element - %d : ",i);
	      scanf("%d",&arr1[i]);
		  fr1[i] = -1;
	    }
    for(i=0; i<n; i++)
    {
        ctr = 1;
        for(j=i+1; j<n; j++)
        {
            if(arr1[i]==arr1[j])
            {
                ctr++;
                fr1[j] = 0;
            }
        }

        if(fr1[i]!=0)
        {
            fr1[i] = ctr;
        }
    }
    printf("\nThe frequency of all elements of array : \n");
    for(i=0; i<n; i++)
    {
        if(fr1[i]!=0)
        {
            printf("%d occurs %d times\n", arr1[i], fr1[i]);
        }
    }
}
//////////////////////////////////////////////////////////////////////////////////
