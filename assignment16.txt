Assignment - 16 
A Job Ready Bootcamp in C++, DSA and IOT 
MySirG 
Multi-Dimensional Array in C Language 

1. Write a program to calculate the sum of two matrices each of order 3x3. 

ans 1) 

#include<stdio.h>
int main ()
{
    int a[3][3],b[3][3],c[3][3],i,j;
    printf ("Enter 9 Numbers for first matrix\n");
    for (i=0;i<3;i++)
    {
        for (j=0;j<3;j++)
        {
            scanf ("%d ",&a[i][j]);
        }
        printf ("\n");
    }

    printf ("\nEnter 9 Numbers for second matrix\n");
    for (i=0;i<3;i++)
    {
        for (j=0;j<3;j++)
        {
            scanf ("%d ",&b[i][j]);
        }
        printf ("\n");
    }
    for (i=0;i<3;i++)
    {
        for (j=0;j<3;j++)
        {
            c[i][j]=a[i][j]+b[i][j];
        }
    }
    printf ("\nThe sum of the two 3*3 matrices is :\n");
    for (i=0;i<3;i++)
    {
        for (j=0;j<3;j++)
        {
            printf ("%d ",c[i][j]);
        }
printf ("\n");
    }
    return 0;
}

2. Write a program to calculate the product of two matrices each of order 3x3.

ans 2 )

 #include<stdio.h>
int main ()
{
    int a[3][3],b[3][3],c[3][3],i,j;
    printf ("Enter 9 Numbers for first matrix\n");
    for (i=0;i<3;i++)
    {
        for (j=0;j<3;j++)
        {
            scanf ("%d ",&a[i][j]);
        }
        printf ("\n");
    }

    printf ("\nEnter 9 Numbers for second matrix\n");
    for (i=0;i<3;i++)
    {
        for (j=0;j<3;j++)
        {
            scanf ("%d ",&b[i][j]);
        }
        printf ("\n");
    }
    for (i=0;i<3;i++)
    {
        for (j=0;j<3;j++)
        {
            c[i][j]=a[i][j]*b[i][j];
        }
    }
    printf ("\nThe sum of the two 3*3 matrices is :\n");
    for (i=0;i<3;i++)
    {
        for (j=0;j<3;j++)
        {
            printf ("%d ",c[i][j]);
        }
printf ("\n");
    }
    return 0;
}


3. Write a program in C to find the transpose of a given matrix.

ans 3 )


#include<stdio.h>
int main ()
{
    int i,j,x,y;
    printf ("Enter the rows and columns of the matrix :\n");
    scanf ("%d %d",&i,&j);
    int a[i][j];
    printf ("\nEnter the values for the matrix :\n");
    for (x=0;x<=i-1;x++)
    {
        for (y=0;y<=j-1;y++)
        {
           scanf ("%d ",&a[x][y]);
        }
        printf ("\n");
    }
    printf ("The TRANSPOSE of the above matrix is :\n");
    for (y=0;y<=j-1;y++)
    {
        for (x=0;x<=i-1;x++)
        {
            printf ("%d ",a[x][y]);
        }
        printf ("\n");
    }
    return 0;
}
 
4. Write a program in C to find the sum of right diagonals of a matrix. 


ans 4 )

#include <stdio.h>

void main()
 
   {
     int i,j,arr1[50][50],sum=0,n;
	 
       printf("\n\nFind sum of right diagonals of a matrix :\n");
       printf("---------------------------------------\n");	 
	 
	 printf("Input the size of the square matrix : ");
     scanf("%d", &n); 
	 printf("Input elements in the first matrix :\n");
       for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {
	           printf("element - [%d],[%d] : ",i,j);
	           scanf("%d",&arr1[i][j]);
			   if (i==j) sum= sum+arr1[i][j];
            }
        }  
	 

	 printf("The matrix is :\n");
	 for(i=0;i<n;i++)
	 {
	   for(j=0;j<n ;j++)
	     printf("% 4d",arr1[i][j]);
	    printf("\n");
	 }
 
       printf("Addition of the right Diagonal elements is :%d\n",sum);
    }

5. Write a program in C to find the sum of left diagonals of a matrix.

ans 5 )

 #include <stdio.h>

void main()
 
   {
     int i,j,arr1[50][50],sum=0,n,m=0;
	 
       printf("\n\nFind sum of left diagonals of a matrix :\n");
       printf("---------------------------------------\n");	 
	 
	 printf("Input the size of the square matrix : ");
     scanf("%d", &n); 
         m=n;
	 printf("Input elements in the first matrix :\n");
       for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {
	           printf("element - [%d],[%d] : ",i,j);
	           scanf("%d",&arr1[i][j]);
            }
        }  
	 printf("The matrix is :\n");
	 for(i=0;i<n;i++)
	 {
	   for(j=0;j<n ;j++)
	     printf("% 4d",arr1[i][j]);
	    printf("\n");
	 }
// calculate the sum of left diagonals
	 for(i=0;i<n;i++)
	 {
           m=m-1;
	   for(j=0;j<n ;j++)
            {
              if (j==m) 
                {
                  sum= sum+arr1[i][j];
                }
              
            }
	 }
       printf("Addition of the  left Diagonal elements is :%d\n",sum);
    }


6. Write a program in C to find the sum of rows and columns of a Matrix.

ans 6 )
 
    #include <stdio.h>
    void main ()
    {
 
        static int array[10][10];
        int i, j, m, n, sum = 0;
 
        printf("Enter the order of the matrix\n");
        scanf("%d %d", &m, &n);
 
        printf("Enter the co-efficients of the matrix\n");
        for (i = 0; i < m; ++i)
        {
            for (j = 0; j < n; ++j) 
            {
                scanf("%d", &array[i][j]);
            }
        }
 
        for (i = 0; i < m; ++i) 
        {
            for (j = 0; j < n; ++j) 
            {
                sum = sum + array[i][j] ;
            }
 
            printf("Sum of the %d row is = %d\n", i, sum);
            sum = 0;
 
        }
        sum = 0;
        for (j = 0; j < n; ++j) 
        {
            for (i = 0; i < m; ++i)
            {
                sum = sum + array[i][j];
            }
 
            printf("Sum of the %d column is = %d\n", j, sum);
            sum = 0;
 
        }
 
    }
7. Write a program in C to print or display the lower triangular of a given matrix. 

ans 7 )

#include <stdio.h>

void main()
   {
  int arr1[10][10],i,j,n;
  float determinant=0;

  
       printf("\n\nDisplay the lower triangular of a given matrix :\n");
       printf("----------------------------------------------------\n");  


     printf("Input the size of the square matrix : ");
     scanf("%d", &n); 
	 printf("Input elements in the first matrix :\n");
       for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {
	           printf("element - [%d],[%d] : ",i,j);
	           scanf("%d",&arr1[i][j]);
            }
        }  
	 printf("The matrix is :\n");
	 for(i=0;i<n;i++)
	 {
	   for(j=0;j<n ;j++)
	     printf("% 4d",arr1[i][j]);
	    printf("\n");
	 }

   printf("\nSetting zero in lower triangular matrix\n");
   for(i=0;i<n;i++){
      printf("\n");
      for(j=0;j<n;j++)
           if(i<=j)
             printf("% 4d",arr1[i][j]);
           else
             printf("% 4d",0);
  }
       printf("\n\n");
}


8. Write a program in C to print or display an upper triangular matrix. 

ans 8 )

#include <stdio.h>

void main()
 {
  int arr1[10][10],i,j,n;
  float determinant=0;
  
  
 printf("\n\nDisplay the upper triangular of a given matrix :\n");
       printf("----------------------------------------------\n");

     printf("Input the size of the square matrix : ");
     scanf("%d", &n); 
	 printf("Input elements in the first matrix :\n");
       for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {
	           printf("element - [%d],[%d] : ",i,j);
	           scanf("%d",&arr1[i][j]);
            }
        }  
	 printf("The matrix is :\n");
	 for(i=0;i<n;i++)
	 {
	   for(j=0;j<n ;j++)
	     printf("% 4d",arr1[i][j]);
	    printf("\n");
	 }

   printf("\nSetting zero in upper triangular matrix\n");
   for(i=0;i<n;i++)
     {
      printf("\n");
      for(j=0;j<n;j++)
           if(i>=j)
             printf("% 4d",arr1[i][j]);
           else
             printf("% 4d",0);
  }
       printf("\n\n");
}

9. Write a program in C to accept a matrix and determine whether it is a sparse matrix. 

ans 9 )

#include <stdio.h>

/*A sparse martix is matrix which  has more zero elements than nonzero elements */
void main ()
{
	static int arr1[10][10];
	int i,j,r,c;
	int ctr=0;
     printf("\n\nDetermine whether a matrix is a sparse matrix :\n");
     printf("----------------------------------------------------\n");	
     printf("Input the number of rows of the matrix : ");
     scanf("%d", &r); 
     printf("Input the number of columns of the matrix : ");
     scanf("%d", &c); 
	 printf("Input elements in the first matrix :\n");
       for(i=0;i<r;i++)
        {
            for(j=0;j<c;j++)
            {
	           printf("element - [%d],[%d] : ",i,j);
	           scanf("%d",&arr1[i][j]);
			if (arr1[i][j]==0)
			{
				++ctr;
			}
            }
        }  
	if (ctr>((r*c)/2))
	{
		printf ("The given matrix is sparse matrix. \n");
	}
	else
		printf ("The given matrix is not a sparse matrix.\n");

	printf ("There are %d number of zeros in the matrix.\n\n",ctr);
}


10. Write a program in C to find the row with maximum number of 1s.

ans 10 )

#include <stdio.h>
#define R 5
#define C 5
 

int getFirstOccur(int arr1[], int l, int h)
{
if(h >= l)
{
    int mid = l + (h - l)/2; 
    if ( ( mid == 0 || arr1[mid-1] == 0) && arr1[mid] == 1)
    return mid;
    else if (arr1[mid] == 0)
    return getFirstOccur(arr1, (mid + 1), h);
    else
    return getFirstOccur(arr1, l, (mid -1));
}
return -1;
}
int findRowMaxOne(int arr2d[R][C])
{
    int max_row_index = 0, max = -1; 
    int i, index;
    for (i = 0; i < R; i++)
    {
    index = getFirstOccur (arr2d[i], 0, C-1);
    if (index != -1 && C-index > max)
    {
        max = C - index;
        max_row_index = i;
    }
    }
    return max_row_index;
}
 
int main()
{
    int arr2d[R][C] = { {0, 1, 0, 1,1},
                       {1, 1, 1, 1, 1},
                       {1, 0, 0, 1, 0},
                       {0, 0, 0, 0, 0},
                       {1, 0, 0, 0, 1}
    };
    int i,j;					   
    //------------- print original 2D array ------------------	
	printf("The given 2D array is :  \n");
	for(i = 0; i < R; i++)
	{
	for(j=0; j<C ; j++)
	{
	printf("%d  ", arr2d[i][j]);
	}

	printf("\n");
    } 
//------------------------------------------------------ 					   
    printf("The index of row with maximum 1s is:  %d " , findRowMaxOne(arr2d));
    return 0;
}

