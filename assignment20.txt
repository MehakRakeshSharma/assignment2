Assignment - 20 
A Job Ready Bootcamp in C++, DSA and IOT 
MySirG 
Pointers 

1. Write a function to swap values of two int variables of calling function. (TSRS) 

ans 1)

#include<stdio.h>
int main ()
{
   int a,b,c;
   printf ("Enter two values : ");
   scanf ("%d %d",&a,&b);
   c = swap(&a,&b);
   printf ("\n The numbers after swapping are %d and %d",a,b);
    return c;
}

int swap (int *p,int *q)
{
    int *temp;

    temp=*p;
    *p=*q;
    *q=temp;
    return 0;
}

2. Write a function to swap strings of two char arrays of calling functions. (TSRS) 

ans 2 )


#include<stdio.h>
#include<string.h>
int main ()
{
    int c;
   char a[1000],b[1000],*x,*y;
   printf ("Enter first  string : ");
   fflush (stdin);
   gets (a);
   printf ("\n Enter second string : ");
   fflush (stdin);
   gets (b);
   x=&a;
   y=&b;
   c = swap(x,y);
   printf ("\n After swapping the first string now is : %s and second string is : %s",a,b);
    return c;
}

int swap (char **p,char **q)
{
   /* char *temp[1000];
    strcpy(temp,*p);
    strcpy(*p,*q);
    strcpy(*q,temp);
    */

    char *temp;
    temp=*p;
    *p=*q;
    *q=temp;


    return 0;
}

3. Write a function to sort an array of int type values. [ void sort(int *ptr,int size); ] 

ans 3 )

#include<stdio.h>
#include<string.h>
int main ()
{
    int c,*x,*y,i,m;
    printf ("Enter the number of values elements of both the arrays : ");
    scanf ("%d",&m);
    int a[m],b[m];
   printf ("\n Enter values for first  string : ");
   for (i=0;i<=m-1;i++)
    scanf ("%d ",&a[i]);
   printf ("\n Enter values for second string : ");
   for (i=0;i<=m-1;i++)
   scanf ("%d ",&b[i]);
   x=&a;
   y=&b;
   c = swap(x,y);
   printf ("\n After swapping\n first array : ");
   for (i=0;i<=m-1;i++)
    printf ("%d ",a[i]);
    printf ("\n And second array : ");
    for (i=0;i<=m-1;i++)
        printf ("%d ",b[i]);

    return c;
}

int swap (int **p,int **q)
{


    int *temp;
    temp=*p;
    *p=*q;
    *q=temp;


    return 0;
}


4. Write a program in C to demonstrate how to handle the pointers in the program. 


ans 4 )


#include<stdio.h>
int main ()
{
    int x,*y,**z;
    printf ("We will first see a normal integer value, print that value : ");
    scanf ("%d",&x);
    printf ("\n This value is stored in a variable, which can be accessed by two ways,\n1) By name of the variable\n2) By address of the variable ");
    y=&x;
    printf ("\n The name/address any one out of two must be known, and the other one could be find out by the pointers, pointers basically stores the address of the variable it points to ");
    printf ("\n for eg. The variable in which you stored %d is 'x' and a integer type pointer 'y' is pointing to it, you can print the address of x via y",x);
    printf  ("\nThe address of x is %d which is stored in y ",y);
    printf ("\ny is called level one pointer or a pointer to an integer");
    z=&y;
    printf ("\n similarly higher levels also exists, which points to a pointer having 1 level less than them, suppose we have 'z' which is pointing to y which means it will contain address of y, and will be called pointer to a pointer, pointing an integer");
    printf ("The address of y is %d and value of y is %d which is address of x whose value is %d",z,y,x);
    return 0;
}


5. Write a program to find the maximum number between two numbers using a pointer 

ans 5 )

#include<stdio.h>
int main ()
{
    int *p,*q,max;
    printf ("Enter first number : ");
    scanf ("%d",p);
    printf ("\nEnter second number : ");
    scanf ("%d",q);
    if (*p>*q)
        max=*p;
    else
        max=*q;
     printf ("\nThe maximum number between the two given numbers is %d",max);
    return 0;
}

6. Write a program to calculate the length of the string using a pointer 

ans 6 )

#include<stdio.h>
int main ()
{
    int l,i;
    char a[1000],*p,*q;
    printf ("Enter a string : ");
    fflush (stdin);
    gets (a);
    p=a;
    for (i=0;a[i]!='\0';i++);
    q=&a[i];
    l=q-p;
    printf ("\n The length of the string is %d",l);
    return 0;
}


7. Write a program to count the number of vowels and consonants in a string using a pointer. 

ans 7 )

#include<stdio.h>
int main ()
{
    int c=0,v=0,i;
    char a[1000],*p;
    printf ("Enter a string : ");
    fflush (stdin);
    gets (a);
    p=a;
    for (i=0;a[i]!='\0';i++)
    {
        if (*(p+i)=='a'||*(p+i)=='e'||*(p+i)=='i'||*(p+i)=='o'||*(p+i)=='u'||*(p+i)=='A'||*(p+i)=='E'||*(p+i)=='I'||*(p+i)=='O'||*(p+i)=='U')
            v++;
        else
        c++;
    }
    printf ("\n The number of vowels and consonants in the %s are %d and %d respectively .",a,v,c);
    return 0;
}

8. Write a program to compute the sum of all elements in an array using pointers. 

ans 8 )

#include<stdio.h>
int main ()
{
    int m,i,*p,sum=0;
    printf ("Enter the number of elements : ");
    scanf ("%d",&m);
    int a[m];
    printf ("\n ENTER THE ELEMENTS :");
    for (i=0;i<=m-1;i++)
    {
        scanf ("%d ",&a[i]);
    }
      p=a;
      for (i=0;i<=m-1;i++)
      {
          sum=sum+*(p+i);
      }
      printf ("\n The sum of all the elements is %d",sum);
    return 0;
}

9. Write a program to print the elements of an array in reverse order.


ans 9 )

#include<stdio.h>
int main ()
{
    int i, m,*p;
    printf ("Enter the number of elements : ");
    scanf ("%d",&m);
    int a[m];
    p=a;

    printf ("\n Enter the elements : ");
    for (i=0;i<=m-1;i++)
        scanf ("%d ",p+i);
    printf ("\n The array in reverse order is : ");
    for (i=m-1;i>=0;i--)
    {
        printf ("%d ",*(p+i));
    }
    return 0;
}


 
10. Write a program to print a string in reverse using a pointer

ans 10 )

#include<stdio.h>
int main ()
{
    int i;
    char a[10000],*p,*q;
    printf ("Enter the string ");
    fflush (stdin);
    gets (a);
    p=a;
    for (i=0;*(p+i)!='\0';i++);
    q=&*(p+i);
    for (i=q;i>=p;i--)
    {
        printf ("%c ",*(p+i));
    }

    return 0;
}
